import("//build/package.gni")

config("libuuid_config") {
    include_dirs = ["include"]
}

config("libuuid_private") {
    defines = ["_POSIX_SOURCE"]
    cflags = ["-fPIC"]
}

source_set("libuuid_sources") {
    sources = [ "src/uuid.cpp", "src/parse.cpp" ]
    public_configs = [":libuuid_config"]
    configs += [":libuuid_private"]
}

static_library("libuuid_static") {
    deps = [ ":libuuid_sources" ]
    public_configs = [":libuuid_config"]
    output_name = "libuuid"
}

shared_library("libuuid_shared") {
    deps = [ ":libuuid_sources" ]
    output_name = "libuuid"
}

resource("libuuid_headers") {
    sources = [ "include/uuid/uuid.h" ]
    outputs = [ "usr/include/uuid/{{source_file_part}}" ]
}

package("libuuid") {
    public_deps = [ ":libuuid_shared", ":libuuid_headers" ]
    public_configs = [ ":libuuid_config" ]
    libraries = [ "libuuid.so" ]
}

